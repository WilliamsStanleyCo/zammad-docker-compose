services:
  - name: zammad-nginx
    type: web
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: bash -lc 'export NGINX_PORT=${PORT}; exec zammad-nginx'
    plan: standard
    healthCheckPath: /
    autoDeploy: false
    envVars:
      - key: NGINX_SERVER_SCHEME
        value: https
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common
    disk:
      name: zammad-storage
      mountPath: /opt/zammad/storage
      sizeGB: 40
    preDeployCommand: >
      bash -lc '
        set -euo pipefail
        req=(POSTGRESQL_HOST POSTGRESQL_USER POSTGRESQL_PASS POSTGRESQL_DB
             ELASTICSEARCH_HOST ELASTICSEARCH_USER ELASTICSEARCH_PASS
             ZAMMAD_FQDN ZAMMAD_HTTP_TYPE)
        for v in "${req[@]}"; do
          val="${!v:-}"
          if [ -z "$val" ] || [ "$val" = "__REQUIRED__" ]; then
            echo "❌ Missing required env: $v"; exit 2
          fi
        done
        echo "✅ Env looks good; running zammad-init…"
        zammad-init
      '

  - name: zammad-scheduler
    type: worker
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: zammad-scheduler
    plan: standard
    autoDeploy: false
    envVars:
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common

  - name: zammad-railsserver
    type: pserv
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: zammad-railsserver
    plan: standard
    autoDeploy: false
    envVars:
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common

  - name: zammad-websocket
    type: pserv
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: zammad-websocket
    plan: standard
    autoDeploy: false
    envVars:
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common

  - name: zammad-memcached
    type: pserv
    runtime: image
    image:
      url: memcached:1.6.39-alpine
    dockerCommand: memcached -m 256 -o modern
    plan: standard
    autoDeploy: false

  # Managed Key Value (no autoDeploy field)
  - name: zammad-redis
    type: keyvalue
    plan: standard
    ipAllowList: []

envVarGroups:
  - name: zammad-common
    envVars:
      - key: POSTGRESQL_HOST
        value: "__REQUIRED__"
      - key: POSTGRESQL_PORT
        value: "5432"
      - key: POSTGRESQL_USER
        value: "__REQUIRED__"
      - key: POSTGRESQL_PASS
        value: "__REQUIRED__"
        sync: false
      - key: POSTGRESQL_DB
        value: "__REQUIRED__"
      - key: POSTGRESQL_OPTIONS
        value: "?pool=50&sslmode=require"

      - key: ELASTICSEARCH_ENABLED
        value: "true"
      - key: ELASTICSEARCH_SCHEMA
        value: https
      - key: ELASTICSEARCH_HOST
        value: "__REQUIRED__"
      - key: ELASTICSEARCH_PORT
        value: "443"
      - key: ELASTICSEARCH_USER
        value: "__REQUIRED__"
      - key: ELASTICSEARCH_PASS
        value: "__REQUIRED__"
        sync: false

      - key: MEMCACHE_SERVERS
        value: zammad-memcached:11211

      - key: ZAMMAD_FQDN
        value: "__REQUIRED__"
      - key: ZAMMAD_HTTP_TYPE
        value: https
      - key: TZ
        value: Africa/Addis_Ababa
