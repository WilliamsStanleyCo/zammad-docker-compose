# render.yaml

services:
  # ──────────────────────────
  # Public entrypoint (NGINX)
  # ──────────────────────────
  - name: zammad-nginx
    type: web
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    # Render injects $PORT; pass it to zammad-nginx
    dockerCommand: bash -lc 'export NGINX_PORT=${PORT}; exec zammad-nginx'
    plan: standard
    healthCheckPath: /
    envVars:
      # Let Zammad know it's sitting behind HTTPS
      - key: NGINX_SERVER_SCHEME
        value: https
      # Redis connection from Render Key Value (internal)
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      # Pull all shared app env
      - fromGroup: zammad-common
    # Persistent files (uploads, assets, etc.)
    disk:
      name: zammad-storage
      mountPath: /opt/zammad/storage
      sizeGB: 40
    # Run DB migrations / ES index setup once per deploy
    preDeployCommand: ""
    postDeployCommand: zammad-init

  # ──────────────────────────
  # Background job scheduler
  # ──────────────────────────
  - name: zammad-scheduler
    type: worker
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: zammad-scheduler
    plan: standard
    envVars:
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common

  # ──────────────────────────
  # Rails app (internal)
  # ──────────────────────────
  - name: zammad-railsserver
    type: pserv
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: zammad-railsserver
    plan: standard
    envVars:
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common

  # ──────────────────────────
  # Websocket app (internal)
  # ──────────────────────────
  - name: zammad-websocket
    type: pserv
    runtime: image
    image:
      url: ghcr.io/zammad/zammad:6.5.1
    dockerCommand: zammad-websocket
    plan: standard
    envVars:
      - key: REDIS_URL
        fromService:
          type: keyvalue
          name: zammad-redis
          property: connectionString
      - fromGroup: zammad-common

  # ──────────────────────────
  # Memcached (internal)
  # ──────────────────────────
  - name: zammad-memcached
    type: pserv
    runtime: image
    image:
      url: memcached:1.6.39-alpine
    dockerCommand: memcached -m 256 -o modern
    plan: standard

  # ──────────────────────────
  # Redis-compatible KV (internal)
  # ──────────────────────────
  - name: zammad-redis
    type: keyvalue
    plan: standard
    # Empty list = only allow connections from inside Render’s private network
    ipAllowList: []

# ───────────────────────────────
# Shared configuration variables
# ───────────────────────────────
envVarGroups:
  - name: zammad-common
    envVars:
      # --- Postgres (Neon) ---
      # Use your Neon pooled endpoint (recommended).
      - key: POSTGRESQL_HOST
        value: your-neon-host.neon.tech
      - key: POSTGRESQL_PORT
        value: 5432
      - key: POSTGRESQL_USER
        value: your_user
      - key: POSTGRESQL_PASS
        value: your_password
      - key: POSTGRESQL_DB
        value: your_db
      - key: POSTGRESQL_OPTIONS
        value: "?pool=50&sslmode=require"

      # --- Elasticsearch (Elastic Cloud) ---
      - key: ELASTICSEARCH_ENABLED
        value: "true"
      - key: ELASTICSEARCH_SCHEMA
        value: https
      - key: ELASTICSEARCH_HOST
        value: your-es-endpoint.elastic-cloud.com
      - key: ELASTICSEARCH_PORT
        value: 443
      - key: ELASTICSEARCH_USER
        value: elastic
      - key: ELASTICSEARCH_PASS
        value: your_generated_password

      # --- Cache ---
      # Zammad expects host:port; private DNS works inside the Render network
      - key: MEMCACHE_SERVERS
        value: zammad-memcached:11211

      # --- App/general ---
      - key: ZAMMAD_FQDN
        value: help.yourdomain.tld
      - key: ZAMMAD_HTTP_TYPE
        value: https
      - key: TZ
        value: Africa/Addis_Ababa